version: '3.4'

volumes:
 pg_data: {}
 redis_data: {}

services:
  logs:
    image: gliderlabs/logspout
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    ports:
    - 5001:80

  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
    ports:
    # to connect: `pgcli postgre://postgres:docker@localhost:54320/em2`
    - 54320:5432
    volumes:
    - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    depends_on:
    - logs

  redis:
    image: redis:4-alpine
    ports:
    # to connect: `redis-cli -p 63790`
    - 63790:6379
    volumes:
    - redis_data:/data
    restart: unless-stopped
    depends_on:
    - logs

  web:
    image: em2-web
    environment:
      DATABASE_URL: 'postgres://postgres:docker@postgres:5432/em2'
      REDISCLOUD_URL: 'redis://redis:6379'
      PORT: 8000
      EM2_AWS_ACCESS_KEY: '${APP_AWS_ACCESS_KEY}'
      EM2_AWS_SECRET_KEY: '${APP_AWS_SECRET_KEY}'
    restart: unless-stopped
    ports:
    - 8000:8000
    depends_on:
    - postgres
    - redis

  # TODO js container just for testing

  worker:
    image: em2-worker
    environment:
      DATABASE_URL: 'postgres://postgres:docker@postgres:5432/em2'
      REDISCLOUD_URL: 'redis://redis:6379'
      APP_AWS_ACCESS_KEY: '${APP_AWS_ACCESS_KEY}'
      APP_AWS_SECRET_KEY: '${APP_AWS_SECRET_KEY}'
    restart: unless-stopped
    depends_on:
    - postgres
    - redis
